apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "redisinsight-chart.fullname" . }}
  labels:
    {{- include "redisinsight-chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: {{ .Values.updateStrategy }}
  selector:
    matchLabels:
      {{- include "redisinsight-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "redisinsight-chart.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "redisinsight-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: redisinsight
          {{- if .Values.persistentVolumeClaim.create }}
          persistentVolumeClaim:
            claimName: {{ include "redisinsight-chart.fullname" . }}-data
          {{- else }}
          emptyDir: {}
          {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: RI_LOG_LEVEL
              value: "{{ .Values.redisinsight.logLevel }}"
            - name: RI_FILES_LOGGER
              value: "false"
            - name: RI_STDOUT_LOGGER
              value: "true"
            {{- if .Values.redisinsight.proxyPath }}
            - name: RI_PROXY_PATH
              value: "{{ .Values.redisinsight.proxyPath }}"
            {{- end}}
          {{- if gt (len .Values.extraEnv) 0 }}
          {{- .Values.extraEnv | toYaml | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            {{- $httpPath := fromJson (tpl "{ \"httpGet\": { \"path\": \"{{ .Values.redisinsight.proxyPath }}{{ .Values.livenessProbeDefault.httpGet.path }}\" }}" .) }}
            {{- toYaml (merge .Values.livenessProbe $httpPath .Values.livenessProbeDefault) | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            {{- $httpPath := fromJson (tpl "{ \"httpGet\": { \"path\": \"{{ .Values.redisinsight.proxyPath }}{{ .Values.readinessProbeDefault.httpGet.path }}\" }}" .) }}
            {{- toYaml (merge .Values.readinessProbe $httpPath .Values.readinessProbeDefault) | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
